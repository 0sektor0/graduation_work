function [y1,xf1,xf2] = TestNN(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 15-Apr-2018 20:09:25.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 1xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 1x1 matrix, initial 1 delay states for input #1.
%   xi2 = 1x1 matrix, initial 1 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 1x1 matrix, final 1 delay states for input #1.
%   xf2 = 1x1 matrix, final 1 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 510.9;
x1_step1.gain = 0.00522056904202558;
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 510.9;
x2_step1.gain = 0.00522056904202558;
x2_step1.ymin = -1;

% Layer 1
b1 = [-0.04382317072267757907;0.04382277604876323035;0.043822935714250596528;-0.04382230309102624205;0.043823150455238345236;0.043822065481780331231;-0.043821708953529825425;-0.043822751437033603816;-0.04382198620916364501;0.043822489559022764771;-0.043822036162091577982;-0.043822156332615616603;0.043821441173070969921;0.043822403649953572957;0.37130161286884799665;-0.043822769548377660254;-0.043822313048774735877;0.043821836747016722213;0.043822868040647743049;0.043822043831742735209;-0.043822461086526022511;-0.043821959849778033269;0.043822406177142891881;-0.043822620654876444368;0.043822660895469212061;-0.043820852530689187454;0.043822366518409545944;0.043821591977444146471;0.043823067244409229237;-0.04382303252814921668;0.043822590529280482097;-0.043822113509954872812;-0.043822277192190735307;0.043822012306960256289;-0.043821773502507994913;-0.043822158634940475141;-0.043822933770702808542;0.043822567691998104422;-0.043822800633970766804;0.043822625565824606386;0.04382281826297825672;-0.04382283881297252548;0.043822579622831807356;0.043822903559783299432;-0.043822005523232419877;-0.043822840674795721094;0.043820965947702170129;0.043822802730447793507;0.043822847665493630531;-0.043821663918004523375];
IW1_1 = [0.11359369832090392138;-0.11359337470994806951;-0.1135935493438773175;0.11359279799200480698;-0.11359369482093403803;-0.11359250746879794025;0.1135920739595274731;0.11359334590377091756;0.11359241094203081923;-0.11359302716399073685;0.11359247173298417377;0.11359261834547478009;-0.11359174920866774161;-0.11359292148951113943;-1.1050598397647122262;0.11359336711432677092;0.11359281020488944114;-0.11359222913217274786;-0.11359347892083127007;-0.11359248107901027958;0.11359299213448741106;0.11359237880939070109;-0.11359292459749348314;0.11359318806436831395;-0.11359323740976591532;0.11359103610988172117;-0.11359287585420888012;-0.11359193204635925634;-0.11359365856119021942;0.1135936341905969954;-0.11359315119964309704;0.1135925660549650662;0.11359276624026415359;-0.11359244267079152135;0.11359215233772756992;0.11359262115799138859;0.11359354773756055734;-0.11359312320302140942;0.11359340326912337193;-0.11359319406189335999;-0.1135934234312623442;0.11359344663268715336;-0.11359313783747529425;-0.1135935167385787592;0.11359243440963753824;0.11359344903989616882;-0.11359117346523626979;-0.11359340565472531015;-0.113593456510121954;0.11359201932404421054];
IW1_2 = [-0.018217417434080444838;0.018216917167678477879;0.018217084511540374003;-0.018216469098468954235;0.018217381233344522029;0.018216244619207278693;-0.018215905849926831289;-0.018216892885149431336;-0.018216169406433651429;0.01821664431578675844;-0.018216216828515006954;-0.018216330615169879642;0.018215650722042665138;0.018216563662769150178;1.2031582909379634483;-0.018216910744275328221;-0.018216478476059411867;0.018216027449711676839;0.018217010701937749739;0.018216224099730306957;-0.018216617590675561467;-0.018216144424925105605;0.018216566036200487061;-0.018216767676154283634;0.018216805577410885575;-0.018215089258223734342;0.018216528772440135353;0.018215794441675429299;0.018217250138273594767;-0.018217202850542311976;0.018216739240463700189;-0.01821629010381688521;-0.018216444699912091865;0.018216194206603864014;-0.0182159672706384973;-0.018216332792029856641;-0.018217082058162307329;0.018216717724267559447;-0.018216941597862877644;0.018216772321735998086;0.018216959368334954134;-0.018216980325232681737;0.018216728957919373771;0.018217048755699915413;-0.018216187771323832933;-0.018216981979677866754;0.018215197474750286638;0.018216943720368878462;0.018216989447494592869;-0.018215862956817048535];

% Layer 2
b2 = 0.061210597503010125142;
LW2_1 = [0.19610785016984930151 -0.19610723639909097282 -0.19610749256382717376 0.19610646691294611466 -0.19610782101334761629 -0.1961060801869489445 0.19610550034313090073 0.196107196573357484 0.19610595123679705476 -0.19610677061349496286 0.19610603248745259175 0.19610622801639771007 -0.19610506498425672728 -0.19610663067660868975 1.0110451368808444084 0.1961072258827278314 0.19610648312645218017 -0.19610570814341812818 -0.1961073846355658179 -0.19610604496488137638 0.19610672423394515107 0.19610590835193686399 -0.19610663479328097059 0.19610698408945148596 -0.19610704960948333042 0.19610410810021672301 -0.19610657020098365422 -0.19610531015376586605 -0.19610769736031855026 0.1961076441073776877 -0.1961069350532684552 0.19610615833162040045 0.19610642474569289773 -0.19610599368002135101 0.19610560530402731949 0.19610623176303937365 0.1961074895388024153 -0.19610689787052679178 0.19610727614364184546 -0.19610699208152715389 -0.19610730458540362453 0.19610733768559127088 -0.19610691729709350817 -0.19610744143641445358 0.19610598264509604416 0.19610734073959903978 -0.19610429246241026235 -0.19610727952342732472 -0.19610735192366895996 0.19610542712035600177];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00522056904202558;
y1_step1.xoffset = 510.9;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(1,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+0,2)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-1-1,2)+1),1,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-1-1,2)+1),1,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 1);
xits = finalxts(finalxts<=1);
xts = finalxts(finalxts>1)-1;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = x-settings.xoffset;
y = y.*settings.gain;
y = y+settings.ymin;
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = y-settings.ymin;
x = x./settings.gain;
x = x+settings.xoffset;
end
